syntax = "proto3";
option go_package = "github.com/mhelmich/haiku-api/pkg/api/pb;pb";

message InitRequest { string EnvironmentName = 1; }
message InitReply { string ID = 1; }

message DeployRequest {
  string Image = 1;
  string EnvironmentName = 2;
  string ServiceName = 3;
}
message DeployReply {
  string ID = 1;
  string URL = 2;
}

message ListEnvRequest {}
message ListEnvReply {
  message KeyValue {
    string Key = 1;
    string Value = 2;
  }
  repeated KeyValue List = 1;
}

message SetEnvRequest {
  string Key = 1;
  string Value = 2;
  string ProjectName = 3;
  string ServiceName = 4;
  string EnvironmentName = 5;
}
message SetEnvReply { bool Success = 2; }

message RemoveEnvRequest { string Key = 1; }
message RemoveEnvReply { bool Success = 1; }

message DockerLoginRequest {
  string Server = 1;
  string Username = 2;
  string Password = 3;
  string Email = 4;
  string Name = 5;
  string EnvironmentName = 6;
}
message DockerLoginReply { string ID = 1; }

message MetaData {
  string ServiceName = 1;
  string EnvironmentName = 2;
}

message UpRequest {
  oneof Data {
    MetaData MetaData = 1;
    bytes Chunk = 2;
  }
}

enum UploadStatus {
  FAILED = 0;
  COMPLETE = 1;
  IN_PROGRESS = 2;
}

message DeploymentUpdate { string message = 1; }

message UpResponse {
  oneof Data {
    UploadStatus UploadStatus = 1;
    DeploymentUpdate DeploymentUpdate = 2;
  }
}

service CliService {
  rpc Init(InitRequest) returns (InitReply) {}
  rpc Deploy(DeployRequest) returns (DeployReply) {}
  rpc ListEnv(ListEnvRequest) returns (ListEnvReply) {}
  rpc SetEnv(SetEnvRequest) returns (SetEnvReply) {}
  rpc RemoveEnv(RemoveEnvRequest) returns (RemoveEnvReply) {}
  rpc DockerLogin(DockerLoginRequest) returns (DockerLoginReply) {}
  rpc Up(stream UpRequest) returns (stream UpResponse) {}
}
